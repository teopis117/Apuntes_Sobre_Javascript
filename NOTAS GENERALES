JS hace un monton de cosas en la web

-el lenguaje de la web
-añade interactividad a tus sitios web
-desarrollo de backend y front end
-desarrollo de apliacaciones moviles y de escritorio

-----------------------------------------------------
INTERACTIVIDAD Y COMPORTAMIENTO AL SITIO web

-Reaccionar a eventos del usuario en nuestra pagina web
-Validar formularios
-Procesar Informacion
-mostrar mapas o ubicaciones

-----------------------------------------------------
Javascript es un lenguaje maduro y estable  

Para que en Html podamos agregar directamente el codigo Js debemos de agregar las etiquetas
<script></script>

el lenguaje de JS no se compila pues cada navegador tiene su interprete

tanto como Css se recomienda tener el codigo aparte con un archivo .js

en Javascript hay dos formas de comentar codigo tanto de una sola linea: //
como en varias /* */


Javascript se conoce como un lenguaje dinamico no tenemos que declarar el tipo de dato
-----------------------------------------------------
Cuando nos referimos a un tipo de datos es al valor que esta variable contendra

Tipos de datos STRING

con la palabra reservada typeof podemos saber el tipo de variables que estamos utilizando

al elegir el contenido de un tipo String no podemos mezclar "" y '' al mismo tiempo ejemplo= "carlitos' xxx

--------------------------------------------------------

con el metodo indexOf cuando el resultado es -1 nos estara diciendo que la palabra que intentamos buscar no fue encontrada mientras que si es mayor a -1 si la encontro

la ventana global nos sirve para poder todo lo que esta disponible en la Javascript

// concatenacion con Template Strings-String literals
// con $ denotaremos las variables
console.log(`Nombre Cliente:${nombre} Email ${email}`);

booleanos solo puede ser true o false

--------------------------------------------------------OBJETOS EN Javascript
son una de las cosas mas utilizadas 

TIPO_DATO Nombre={
    PROPIEDAD:VALOR,
    PROPIEDAD2:VALOR2,
    ETC
}

--------------------------------------------

// sabemos que agregar y eliminar propiedades son importantes para un objeto asi que veremos como agregar o eliminar

// Agregar propiedades

producto.imagen="imagen.jpg";

// Eliminar propiedades

delete producto.disponible;

console.log(producto);
------------------------------------------

DESTRUCTURING   

// Destructuring en JS nos sirve para extraer y declarar una propiedad de un objeto

// la nueva forma para hacerlo es la siguiente

const {precio}=producto;

console.log(precio);
---------------------------------------------

// existen metodos en js que nos permiten hacer un monton de cosas en general y en este caso veremos dos Frezee y seal

// con Freeze  haremos que no podamos modificar,agregar o eliminar cualquier propiedad en nuestros objetos
Object.freeze(producto);

producto.precio=300;

// y para saber si un objeto esta  bloquead podemos hacer lo siguiente
// si retorna true=esta sellado
console.log(Object.isFrozen(producto));

// Seal  nos permitira modificar propiedades mas no eliminar o agregar

Object.seal(producto);
producto.precio="nuevo precio";

// y con esta sintaxis podemos unir varios objetos
const nuevoProducto={...producto,...medidas};
--------------------------------------------------}
ARREGLOS 

// Arreglos  son una forma de almacenar muchos datos dentro de una variables

// forma de incializar un arreglo            
// tipo identificador=[valores,valores,valores];
const numeros=[10,20,30,40,50];
console.log(numeros);
-------------------------------------------------------
funciones
/funciones  las funciones son formas de hacer que nuestro codigo  mas organizado y preparado para reutilizarlo

/* ¿que son las funciones? nos permiten agrupar lineas de codigo en tareas con un nombre para realizar todo lo que agrupe en dicha tarea */

// Declaracion de una funcion                  function nombre(parametros){}

function sumar()
{
console.log(10+10);
}

//expresion de una funcion

const sumar2=function()
{
    console.log(3+3);
}

una funcion es un fragmento de codigo que al llamarse ejecuta una accion y al ejecutarse sobre un objeto puede ejecutar una accion sobre este

metodo es un conjunto de funcionalidades que dependen del objeto ademas de que podemos verlo puesto que despues de la variables podemos acceder con un "."

los parametros son  variables que existiran dentro de dicha funcion  y argumentos de la funcion son los valores que le pasemos a la funcion para ejecutarse
---------------------------------------------------

//ahora veremos algo llamado las estructuras de control en js por lo general cuando queremos comprobar las
/*
if(condicion)
{
    sentencias
}
por si no se cumpliera el if podemos utilizar el else if
else if(condicion)
{
    sentencias
}
y por si nunca de las anteriores se cumpla por asi decirlo los casos default  encontrariamos perfecto el else

else
{
    sentencias
}